openapi: 3.0.3
info:
  title: Argon API
  description: API для работы с сервисом Argon
  version: 1.0.0
servers:
  - url: http://127.0.0.1/api/v1
    description: API версии 1

tags:
  - name: System
    description: Системные операции
  - name: Listing
    description: Операции с объявлениями
  - name: Boost
    description: Управление бустами объявлений
  - name: Currency
    description: Операции с валютами
  - name: Categories
    description: Операции с категориями
  - name: Filters
    description: Операции с фильтрами
  - name: Location
    description: Операции с локациями
  - name: Search
    description: Поиск объявлений

paths:
  /api/v1/ping:
    get:
      summary: Проверить доступность сервера
      tags:
        - System
      description: Проверяет, доступен ли сервер.
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  ping:
                    type: string
                    example: pong
                required:
                  - ping

  /api/v1/listing:
    post:
      summary: Создать новое объявление
      tags:
        - Listing
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
          description: Язык ответа (по умолчанию ИСПАНСКИЙ)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingRequest'
      responses:
        '200':
          description: Объявление успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'

  /api/v1/listing/{listing_id}:
    get:
      summary: Получить объявление по ID
      tags:
        - Listing
      parameters:
        - name: Accept-Language
          in: header
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
          description: Язык ответа (по умолчанию ИСПАНСКИЙ)
        - name: listing_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешно найденное объявление
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Удалить объявление по ID
      tags:
        - Listing
      parameters:
        - name: listing_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Объявление успешно удалено
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: Обновить объявление по ID
      tags:
        - Listing
      parameters:
        - name: Accept-Language
          in: header
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
          description: Язык ответа (по умолчанию ИСПАНСКИЙ)
        - name: listing_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListingRequest'
      responses:
        '200':
          description: Объявление успешно обновлено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/categories:
    get:
      summary: Получить дерево категорий
      tags:
        - Categories
      description: Возвращает иерархию категорий с подкатегориями.
      parameters:
        - name: Accept-Language
          in: header
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
          description: Язык ответа (по умолчанию ИСПАНСКИЙ)
      responses:
        '200':
          description: Успешный ответ с иерархией категорий
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoriesResponse'

  /api/v1/filters:
    get:
      summary: Получить фильтры для категории
      tags:
        - Filters
      parameters:
        - name: Accept-Language
          in: header
          description: Язык для локализации фильтров (по умолчанию ИСПАНСКИЙ)
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
        - name: category_id
          in: query
          required: true
          schema:
            type: string
          description: ID категории для получения фильтров
      responses:
        '200':
          description: Успешный ответ со списком фильтров
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFiltersByCategoryResponse'

  /api/v1/search:
    post:
      summary: Поиск объявлений
      tags:
        - Search
      parameters:
        - name: Accept-Language
          in: header
          description: Язык локализации (по умолчанию ИСПАНСКИЙ)
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: Поисковый запрос, может быть пустой строкой, но быть должен.
                  example: "Часы от бабки"
                currency:
                  description: Валюта, в которой происходит поиск. Влияет на поля price и currency, не влияет на original_price и original_currency.
                  $ref: '#/components/schemas/SupportedCurrency'
                cursor:
                  type: string
                  nullable: true
                  description: Курсор для пагинации. Если не указан, то первая страница (или последняя, при отрицательном лимите). Указывает на элемент, предшествующий первому в результатах запроса, при положительном лимите. При отрицательном лимите, указывает на последний элемент в результатах запроса.
                  example: "123e4567-e89b-12d3-a456-426614174000"
                qid:
                  type: string
                  nullable: true
                  description: ID поискового запроса, если указан, то соответствующий ему набор айди категории, фильтров, айди локации и сортировки должен быть использован, даже если они указаны в запросе.
                  example: "123e4567-e89b-12d3-a456-426614174000"
                limit:
                  type: number
                  minimum: 1
                  maximum: 100
                  default: 20
                  description: Количество результатов на странице, если отрицательное, от курсора идти в обратную сторону
                category_id:
                  type: string
                  nullable: true
                  description: ID категории, в которой происходит поиск, если не указана, то по всем категориям
                  example: "electronics"
                location_id:
                  type: string
                  nullable: true
                  description: ID локации, в которой происходит поиск, если не указана, то по всем локациям
                  example: "cordoba-123e456"
                filters:
                  description: НЕЛОКАЛИЗОВАННЫЕ значения фильтров, которые были использованы в поиске
                  type: array
                  items:
                    $ref: '#/components/schemas/FilterValue'
                sort_order:
                  description: Сортировка, если не указано, то по релевантности
                  $ref: '#/components/schemas/SortOrder'
              required:
                - query
                - currency
                - limit
      responses:
        '200':
          description: Успешный поиск
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'

  /api/v1/search/params:
    get:
      summary: Получить параметры поискового запроса
      tags:
        - Search
      parameters:
        - name: Accept-Language
          in: header
          description: Язык локализации (по умолчанию ИСПАНСКИЙ)
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
        - name: qid
          in: query
          required: true
          schema:
            type: string
          description: ID поискового запроса, сгенерированный во время выполнения запроса поиска.
      responses:
        '200':
          description: ЛОКАЛИЗОВАННЫЕ в соответствии с языком локализации, параметры поискового запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchParamsResponse'

  /api/v1/currency:
    get:
      summary: Получить курс обмена между валютами
      tags:
        - Currency
      parameters:
        - name: from
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SupportedCurrency'
          description: Исходная валюта
          example: "USD"
        - name: to
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SupportedCurrency'
          description: Целевая валюта
          example: "RUB"
      responses:
        '200':
          description: Курс обмена между валютами
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRateResponse'

  /api/v1/location:
    post:
      tags:
        - Location
      summary: Получить информацию о локации по области
      description: Возвращает локацию на основе переданной области
      operationId: getLocationByArea
      parameters:
        - name: Accept-Language
          in: header
          description: Язык локализации (по умолчанию ИСПАНСКИЙ)
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                area:
                  $ref: '#/components/schemas/Area'
      responses:
        '200':
          description: Успешный ответ с информацией о локации
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'

  /api/v1/boost/{listing_id}:
    parameters:
      - name: listing_id
        in: path
        required: true
        schema:
          type: string
        description: Уникальный идентификатор объявления
    get:
      summary: Получить доступные бусты для объявления
      tags:
        - Boost
      description: Возвращает доступнын бусты объявления и список типов бустов, которые сейчас включены
      responses:
        '200':
          description: Успешный ответ с информацией о бустах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoostsResponse'
        '403':
          description: Доступ запрещен. Возникает, если пользователь не является автором объявления.
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Установить типы бустов для объявления
      tags:
        - Boost
      description: |
        Устанавливает список типов бустов, которые будут применены к объявлению.
        Важно: если массив бустов не пустой, то первым бустом всегда должен быть base.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled_boost_types:
                  type: array
                  description: Типы бустов, которые нужно включить. Если массив не пустой, то первым элементом должен быть base.
                  items:
                    $ref: '#/components/schemas/BoostType'
              required:
                - enabled_boost_types
      responses:
        '200':
          description: Успешный ответ с обновленной информацией о бустах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBoostsResponse'
        '400':
          $ref: '#/components/responses/InvalidBoostSequence'
        '403':
          description: Доступ запрещен. Возникает, если пользователь не является автором объявления.
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    PingResponse:
      type: object
      properties:
        ping:
          type: string
          example: pong
      required:
        - ping

    ListingRequest:
      type: object
      properties:
        title:
          type: string
          description: Название объявления
          example: Часы
        description:
          type: string
          description: Описание объявления
          example: супер товар
        price:
          description: Цена в валюте запроса
          $ref: '#/components/schemas/ListingPrice'
        currency:
          description: Валюта, в которой была указана цена
          $ref: '#/components/schemas/SupportedCurrency'
        location:
          $ref: '#/components/schemas/SellerLocation'
        categories:
          type: array
          description: Айди категорий, в которых находится объявление
          minItems: 1
          items:
            type: string
            example: "electronics"
            description: Уникальный айди категории
        characteristics:
          type: array
          description: Характеристики объявления
          items:
            $ref: '#/components/schemas/CharacteristicType'
        images:
          type: array
          description: URL картинок объявления высотой не больше 400px, размерностью не больше 3к1 (идеально 1к1).
          items:
            type: string
            description: URL картинки объявления высотой не больше 400px, размерностью не больше 3к1 (идеально 1к1).
            example: "https://example.com/image.png"
      required:
        - title
        - text

    Listing:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор объявления
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          description: Локализованное название объявления
          example: Часы
        description:
          type: string
          description: Локализованное описание объявления
          example: супер товар
        originalDescription:
          type: string
          description: Описание объявления на языке, указанном в запросе на создание объявления
          example: супер товар
        price:
          $ref: '#/components/schemas/ListingPrice'
        currency:
          description: Валюта, которая была указана в запросе
          $ref: '#/components/schemas/SupportedCurrency'
        originalPrice:
          $ref: '#/components/schemas/OriginalListingPrice'
        originalCurrency:
          description: Валюта, которая была указана автором объявления
          $ref: '#/components/schemas/SupportedCurrency'
        location:
          $ref: '#/components/schemas/SellerLocation'
        seller:
          $ref: '#/components/schemas/Seller'
        categories:
          type: array
          description: Категории, в которых находится объявление
          minItems: 1
          items:
            $ref: '#/components/schemas/Category'
        characteristics:
          type: array
          description: Характеристики объявления
          items:
            $ref: '#/components/schemas/CharacteristicType'
        images:
          type: array
          description: URL картинок объявления высотой не больше 400px, размерностью не больше 3к1 (идеально 1к1).
          items:
            type: string
            description: URL картинки объявления высотой не больше 400px, размерностью не больше 3к1 (идеально 1к1).
            example: "https://example.com/image.png"
        created_at:
          type: integer
          description: Время создания в миллисекундах
          example: 1708297118000
        updated_at:
          type: integer
          description: Время последнего обновления в миллисекундах
          example: 1708297118000
        boosts:
          type: array
          description: Информация о бустах объявления. Поле присутствует только если запрос отправил автор объявления и объявление не содержит запрещенку.
          nullable: true
          items:
            $ref: '#/components/schemas/Boost'
        is_editable:
          type: boolean
          description: Может ли текущий пользователь редактировать это объявление (он может, если он его создал)
        is_buyable:
          type: boolean
          description: Можно ли купить этот товар через сайт сейчас
        is_nsfw:
          type: boolean
          description: Содержит ли объявление запрещенку
      required:
        - id
        - title
        - description
        - originalDescription
        - price
        - currency
        - originalPrice
        - originalCurrency
        - location
        - seller
        - categories
        - characteristics
        - images
        - created_at
        - updated_at
        - is_editable
        - is_nsfw
        - is_buyable

    Seller:
      type: object
      description: Информация о продавце
      properties:
        id:
          type: string
          description: Уникальный идентификатор продавца
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Имя продавца, в том виде в котором он его указал
          example: "John Doe"
        rating:
          type: number
          description: Рейтинг продавца по пятибальной шкале, может отсутствовать
          minimum: 0
          maximum: 5
          nullable: true
          example: 4.5
        available:
          type: boolean
          description: Не запретил ли продавец связываться с ним до продажи (True если не запретил)
          nullable: true
          example: true
        image:
          type: string
          description: URL аватара продавца, может отсутствовать
          nullable: true
          example: "https://example.com/avatar.jpg"
      required:
        - id
        - name

    BoostType:
      type: string
      enum: [base, highlight, upfront]
      description: Тип буста объявления, если массив объявлений не пустой, то он не может начинаться ни с чего кроме base.

    Boost:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/BoostType'
        comission_percents:
          type: number
          description: Процент комиссии для данного типа буста. Размер комиссии base буста равен проценту возвратов но не меньше 2%. Подсветка пока что 7%, Апфронт - 12%.
          example: 5.5
      required:
        - type
        - comission_percents

    Category:
      type: object
      description: Категория объявления с локализованным названием
      properties:
        id:
          type: string
          description: Уникальный идентификатор категории
          example: "electronics"
        name:
          type: string
          description: Локализованное название категории
          example: "Электроника"
        image:
          type: string
          description: URL иконки категории размером 32x32 пикселя
          example: "https://example.com/image.png"
      required:
        - id
        - name

    CategoryNode:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category'
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryNode'
      required:
        - category

    GetCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          example:
            - category:
                id: "electronics"
                name: "Электроника"
              subcategories:
                - category:
                    id: "smartphones"
                    name: "Смартфоны"
                  subcategories:
                    - category:
                        id: "iphone"
                        name: "iPhone"
                    - category:
                        id: "google_pixel"
                        name: "Google Pixel"
            - category:
                id: "clothing"
                name: "Одежда"
              subcategories:
                - category:
                    id: "mens_clothing"
                    name: "Мужская одежда"
                - category:
                    id: "womens_clothing"
                    name: "Женская одежда"
            - category:
                id: "furniture"
                name: "Мебель"
          items:
            $ref: '#/components/schemas/CategoryNode'
      required:
        - categories

    GetFiltersByCategoryResponse:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterParams'
      required:
        - filters

    FilterParams:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/FilterRole'
        params:
          oneOf:
            - $ref: '#/components/schemas/PriceFilterParams'
            - $ref: '#/components/schemas/ColorFilterParams'
            - $ref: '#/components/schemas/DropdownFilterParams'
            - $ref: '#/components/schemas/SelectorFilterParams'
            - $ref: '#/components/schemas/CheckboxFilterParams'
            - $ref: '#/components/schemas/AmountFilterParams'
      required:
        - role
        - params

    FilterRole:
      type: string
      enum: [price, color, condition, season, brand, stocked, height, width, depth, weight, area, volume]
      description: Роль фильтра

    PriceFilterValue:
      type: object
      properties:
        min:
          type: number
          nullable: true
          description: Минимальное значение, которое должна принимать цена. Совпадает с min из PriceFilterParams если null.
          example: 10
        max:
          type: number
          nullable: true
          description: Максимальное значение, которое должна принимать цена. Совпадает с max из PriceFilterParams если null.
          example: 123
      required:
        - min
        - max

    PriceFilterParams:
      type: object
      properties:
        min:
          type: number
          description: Минимальное значение, которое может принимать цена.
          example: 0
        max:
          type: number
          description: Максимальное значение, которое может принимать цена.
          example: 200
      required:
        - min
        - max

    Price:
      type: number
      minimum: 0
      example: 100500

    ListingPrice:
      allOf:
        - $ref: '#/components/schemas/Price'
        - description: Цена в валюте запроса

    OriginalListingPrice:
      allOf:
        - $ref: '#/components/schemas/Price'
        - description: Цена в исходной валюте, которую указал автор объявления

    Color:
      type: string
      enum: [white, red, orange, yellow, olive, green, teal, blue, violet, purple, pink, brown, grey, black]

    ColorFilterValue:
      type: array
      items:
        $ref: '#/components/schemas/Color'

    ColorFilterParams:
      type: object
      description: Пустой объект для цветового фильтра

    DropdownValue:
      type: string
      description: Значение опции, уникальная строка
      example: "apple"

    DropdownOption:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/DropdownValue'
        label:
          type: string
          description: Локализованное название опции
          example: "Apple"
      required:
        - value

    DropdownFilterValue:
      type: array
      items:
        $ref: '#/components/schemas/DropdownValue'

    DropdownFilterParams:
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/DropdownOption'
        label:
          type: string
          description: Локализованное название фильтра
          example: "Брэнд"
      required:
        - options
        - label

    SelectorFilterValue:
      $ref: '#/components/schemas/DropdownValue'

    SelectorFilterParams:
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/DropdownOption'
        label:
          type: string
          description: Локализованное название фильтра
          example: "Состояние"
      required:
        - options
        - label

    CheckboxValue:
      type: boolean

    CheckboxFilterValue:
      $ref: '#/components/schemas/CheckboxValue'

    CheckboxFilterParams:
      type: object
      properties:
        label:
          type: string
          description: Локализованное название фильтра
          example: "Только с фото"
      required:
        - label

    CharacteristicType:
      type: object
      properties:
        role:
          type: string
          enum: [color, condition, season, brand, stocked, height, width, depth, weight, area, volume]
          description: Роль характеристики
        value:
          oneOf:
            - $ref: '#/components/schemas/Color'
            - $ref: '#/components/schemas/DropdownValue'
            - $ref: '#/components/schemas/CheckboxValue'
            - $ref: '#/components/schemas/Amount'
      required:
        - role
        - value

    SearchResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SearchItem'
        cursor_before:
          type: string
          nullable: true
          description: Курсор для предыдущей страницы, указывается в следующем запросе. Содержит информацию о элементе предшествующем текущей странице (или, что то же самое, последнем элементе предыдущей страницы).
          example: "123e4567-e89b-12d3-a456-426614174000"
        cursor_after:
          type: string
          nullable: true
          description: Курсор для следующей страницы, указывается в следующем запросе. Содержит информацию о последнем элементе текущей страницы (или, что то же самое, эелементе, предшествующем следующей странице).
          example: "123e4567-e89b-12d3-a456-426614174000"
        qid:
          type: string
          description: ID поискового запроса, генерируется по набору categoryId, locationId, НЕЛОКАЛИЗОВАННЫЕ значения filters, sortOrder. Для одинаковых значений генерируется один и тот же ID.
          example: "123e4567-e89b-12d3-a456-426614174000"
      required:
        - items
        - cursor_before
        - cursor_after
        - qid

    SearchParamsResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category'
          description: Категория, в которой происходит поиск, если не указана, то по всем категориям
        location:
          $ref: '#/components/schemas/BuyerLocation'
        filters:
          type: array
          description: Фильтры, которые были использованы в поиске
          items:
            $ref: '#/components/schemas/FilterValue'
        sort_order:
          description: Сортировка, если не указано, то по релевантности
          $ref: '#/components/schemas/SortOrder'

    SearchItem:
      type: object
      properties:
        item_id:
          type: string
          description: Уникальный айди объявления
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          description: Локализованное название объявления
          example: "Часы Ролекс для элиточек"
        price:
          $ref: '#/components/schemas/ListingPrice'
        currency:
          $ref: '#/components/schemas/SupportedCurrency'
          description: Валюта, которая была указана в запросе
        original_price:
          $ref: '#/components/schemas/OriginalListingPrice'
        original_currency:
          $ref: '#/components/schemas/SupportedCurrency'
          description: Валюта, которая была указана автором объявления
        description:
          type: string
          description: Локализованное описание объявления
          example: "Эти часы подарила мне моя бабушка, они супер, но мне не подходят, так как я хочу есть, а сколько времени знать не хочу"
        location:
          $ref: '#/components/schemas/SellerLocation'
        category:
          $ref: '#/components/schemas/Category'
          description: Одна из категорий объявления, но первая из тех, что подходит для запроса
        images:
          type: array
          description: URL картинок объявления высотой не больше 200 пикселей, размерностью не выше 3к1 (идеально 1к1).
          items:
            type: string
            description: URL картинки объявления высотой не больше 200 пикселей, размерностью не выше 3к1 (идеально 1к1).
            example: "https://example.com/image.png"
        is_highlighted:
          type: boolean
          description: Объявление отмечено как выделенное рекламным цветом
          example: true
        is_buyable:
          type: boolean
          description: Объявление отмечено как куплю
          example: true
      required:
        - item_id
        - title
        - price
        - currency
        - original_price
        - original_currency
        - description
        - location
        - category
        - images
        - is_highlighted
        - is_buyable

    SortOrder:
      type: string
      enum: [price_asc, price_desc, newest, relevance]

    Location:
      type: object
      properties:
        id:
          type: string
          description: Уникальный идентификатор локации
          example: "cordoba-123e456"
        name:
          type: string
          description: Локализованное название локации
          example: "Кордоба, центр"
        area:
          $ref: '#/components/schemas/Area'
      required:
        - id
        - name
        - area

    BuyerLocation:
      allOf:
        - $ref: '#/components/schemas/Location'
        - description: Локация, в которой происходит поиск, если не указана, то по всем локациям. Радиус локации говорит о том, как далеко покупатель готов пройтись от координат локации.

    SellerLocation:
      allOf:
        - $ref: '#/components/schemas/Location'
        - description: Локация с радиусом, в котором продавец осуществляет доставку

    Area:
      type: object
      description: Область на карте, определяемая центральной точкой и радиусом
      properties:
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        radius:
          type: number
          description: Радиус области в метрах
          example: 1000
      required:
        - coordinates
        - radius

    Rectangle:
      type: object
      description: Прямоугольная область на карте, определяемая центральной точкой, шириной и высотой
      properties:
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        width:
          type: number
          description: Ширина прямоугольника в метрах
          example: 1000
        height:
          type: number
          description: Высота прямоугольника в метрах
          example: 2000
      required:
        - coordinates
        - width
        - height

    Coordinates:
      type: object
      description: Географические координаты точки на карте
      properties:
        lat:
          type: number
          description: Широта в градусах, от -90° (Южный полюс) до +90° (Северный полюс)
          minimum: -90
          maximum: 90
          example: -31.420208221317445
        lng:
          type: number
          description: Долгота в градусах, от -180° (западная) до +180° (восточная)
          minimum: -180
          maximum: 180
          example: -64.18894746740074
      required:
        - lat
        - lng

    SupportedCurrency:
      type: string
      description: Поддерживаемые валюты для цен в объявлениях
      enum: [USD, RUB, ARS, EUR]

    FilterValue:
      type: object
      properties:
        role:
          type: string
          enum: [price, color, condition, season, brand, stocked, height, width, depth, weight, area, volume]
          description: Роль фильтра
        value:
          oneOf:
            - $ref: '#/components/schemas/PriceFilterValue'
            - $ref: '#/components/schemas/ColorFilterValue'
            - $ref: '#/components/schemas/DropdownFilterValue'
            - $ref: '#/components/schemas/SelectorFilterValue'
            - $ref: '#/components/schemas/CheckboxFilterValue'
            - $ref: '#/components/schemas/AmountFilterValue'
      required:
        - role
        - value

    ExchangeRateResponse:
      type: object
      properties:
        rate:
          type: number
          description: Коэффициент для конвертации из исходной валюты в целевую. Умножьте цену в исходной валюте на этот коэффициент, чтобы получить цену в целевой валюте.
          example: 92.5
      required:
        - rate

    GetBoostsResponse:
      type: object
      description: Ответ с информацией о бустах объявления
      properties:
        boosts:
          type: array
          description: Доступные для установки бусты
          items:
            $ref: '#/components/schemas/Boost'
        enabled_boost_types:
          type: array
          description: Типы бустов, которые включены для данного объявления
          items:
            $ref: '#/components/schemas/BoostType'
      required:
        - boosts
        - enabled_boost_types

    Dimension:
      type: string
      enum:
        - cm
        - m
        - km
        - cm2
        - m2
        - km2
        - cm3
        - m3
        - km3
        - ml
        - l
        - g
        - kg
        - t
        - ma
        - a
        - w
        - kw
        - om
      description: Единица измерения

    Amount:
      type: object
      properties:
        value:
          type: number
          description: Числовое значение
        dimension:
          $ref: '#/components/schemas/Dimension'
          description: Единица измерения
      required:
        - value
        - dimension

    AmountFilterValue:
      type: object
      properties:
        min:
          type: number
          nullable: true
          description: Минимальное значение. Совпадает с min из AmountFilterParams если null.
        max:
          type: number
          nullable: true
          description: Максимальное значение. Совпадает с max из AmountFilterParams если null.
        dimension:
          $ref: '#/components/schemas/Dimension'
          description: Единица измерения для значений
      required:
        - dimension

    AmountFilterParams:
      type: object
      properties:
        min:
          type: number
          description: Минимальное значение, которое может принимать параметр
        max:
          type: number
          description: Максимальное значение, которое может принимать параметр
        dimension_options:
          type: array
          description: Доступные единицы измерения для этого параметра, лучше, если содержит ровно одно значение
          items:
            $ref: '#/components/schemas/Dimension'
        label:
          type: string
          description: Локализованное название фильтра
          example: "Высота"
      required:
        - min
        - max
        - dimension_options
        - label

  responses:
    NotFound:
      description: Объект не найден
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: NotFound
              description:
                type: string
                example: Объект не найден

    InvalidBoostSequence:
      description: Неверная последовательность бустов
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: InvalidBoostSequence
              description:
                type: string
                example: Последовательность бустов должна начинаться с base
