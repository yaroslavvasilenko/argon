openapi: 3.0.3
info:
  title: Argon API
  description: API для работы с сервисом Argon
  version: 1.0.0
servers:
  - url: http://127.0.0.1/api/v1
    description: API версии 1

tags:
  - name: System
    description: Системные операции
  - name: Listing
    description: Операции с объявлениями
  - name: Currency
    description: Операции с валютами
  - name: Categories
    description: Операции с категориями
  - name: Filters
    description: Операции с фильтрами
  - name: Search
    description: Поиск объявлений

paths:
  /api/v1/ping:
    get:
      summary: Проверить доступность сервера
      tags:
        - System
      description: Проверяет, доступен ли сервер.
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  ping:
                    type: string
                    example: pong
                required:
                  - ping

  /api/v1/listing:
    post:
      summary: Создать новое объявление
      tags:
        - Listing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Часы
                text:
                  type: string
                  example: супер товар
              required:
                - title
                - text
      responses:
        '200':
          description: Объявление успешно создано
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "123e4567-e89b-12d3-a456-426614174000"
                  title:
                    type: string
                    example: Часы
                  text:
                    type: string
                    example: супер товар
                required:
                  - id
                  - title
                  - text

  /api/v1/listing/{listing_id}:
    get:
      summary: Получить объявление по ID
      tags:
        - Listing
      parameters:
        - name: listing_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Успешно найденное объявление
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "123e4567-e89b-12d3-a456-426614174000"
                  title:
                    type: string
                    example: Часы
                  text:
                    type: string
                    example: супер товар
                required:
                  - id
                  - title
                  - text
        '404':
          description: Объект не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: NotFound
                  description:
                    type: string
                    example: Объект не найден

    delete:
      summary: Удалить объявление по ID
      tags:
        - Listing
      parameters:
        - name: listing_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Объявление успешно удалено

    put:
      summary: Обновить объявление по ID
      tags:
        - Listing
      parameters:
        - name: listing_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: Часы
                text:
                  type: string
                  example: супер товар
              required:
                - title
                - text
      responses:
        '200':
          description: Объявление успешно обновлено
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "123e4567-e89b-12d3-a456-426614174000"
                  title:
                    type: string
                    example: Часы
                  text:
                    type: string
                    example: супер товар
                required:
                  - id
                  - title
                  - text

  /api/v1/categories:
    get:
      summary: Получить дерево категорий
      tags:
        - Categories
      description: Возвращает иерархию категорий с подкатегориями.
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
          description: Язык ответа (по умолчанию ИСПАНСКИЙ)
      responses:
        '200':
          description: Успешный ответ с иерархией категорий
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoriesResponse'

  /api/v1/filters:
    get:
      summary: Получить фильтры для категории
      tags:
        - Filters
      parameters:
        - name: Accept-Language
          in: header
          description: Язык для локализации фильтров (по умолчанию ИСПАНСКИЙ)
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
        - name: category_id
          in: query
          required: true
          schema:
            type: string
          description: ID категории для получения фильтров
      responses:
        '200':
          description: Успешный ответ со списком фильтров
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFiltersByCategoryResponse'

  /api/v1/search:
    post:
      summary: Поиск объявлений
      tags:
        - Search
      parameters:
        - name: Accept-Language
          in: header
          description: Язык локализации (по умолчанию ИСПАНСКИЙ)
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: Поисковый запрос, может быть пустой строкой, но быть должен.
                  example: "Часы от бабки"
                currency:
                  description: Валюта, в которой происходит поиск. Влияет на поля price и currency, не влияет на originalPrice и originalCurrency.
                  $ref: '#/components/schemas/SupportedCurrency'
                cursor:
                  type: string
                  nullable: true
                  description: Курсор для пагинации. Если не указан, то первая страница (или последняя, при отрицательном лимите). Указывает на элемент, предшествующий первому в результатах запроса, при положительном лимите. При отрицательном лимите, указывает на последний элемент в результатах запроса.
                  example: "123e4567-e89b-12d3-a456-426614174000"
                qid:
                  type: string
                  nullable: true
                  description: ID поискового запроса, если указан, то соответствующий ему набор айди категории, фильтров, айди локации и сортировки должен быть использован, даже если они указаны в запросе.
                  example: "123e4567-e89b-12d3-a456-426614174000"
                limit:
                  type: number
                  minimum: 1
                  maximum: 100
                  default: 20
                  description: Количество результатов на странице, если отрицательное, от курсора идти в обратную сторону
                categoryId:
                  type: string
                  description: Id категории, в которой происходит поиск, если не указана, то по всем категориям
                  example: "electronics"
                location:
                  type: string
                  description: Id локации, в которой происходит поиск, если не указана, то по всем локациям
                  example: "cordoba-123e456"
                filters:
                  description: НЕЛОКАЛИЗОВАННЫЕ значения фильтров, которые были использованы в поиске
                  type: array
                  items:
                    $ref: '#/components/schemas/FilterValue'
                sortOrder:
                  description: Сортировка, если не указано, то по релевантности
                  $ref: '#/components/schemas/SortOrder'
              required:
                - query
                - currency
                - limit
      responses:
        '200':
          description: Успешный поиск
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'

  /api/v1/search/params:
    get:
      summary: Получить параметры поискового запроса
      tags:
        - Search
      parameters:
        - name: Accept-Language
          in: header
          description: Язык локализации (по умолчанию ИСПАНСКИЙ)
          schema:
            type: string
            enum: [en, ru, es]
            default: es
          required: false
        - name: qid
          in: query
          required: true
          schema:
            type: string
          description: ID поискового запроса, сгенерированный во время выполнения запроса поиска.
      responses:
        '200':
          description: ЛОКАЛИЗОВАННЫЕ в соответствии с языком локализации, параметры поискового запроса.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchParamsResponse'

  /api/v1/currency:
    get:
      summary: Получить курс обмена между валютами
      tags:
        - Currency
      parameters:
        - name: from
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SupportedCurrency'
          description: Исходная валюта
          example: "USD"
        - name: to
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/SupportedCurrency'
          description: Целевая валюта
          example: "RUB"
      responses:
        '200':
          description: Курс обмена между валютами
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExchangeRateResponse'

components:
  schemas:
    PingResponse:
      type: object
      properties:
        ping:
          type: string
          example: pong
      required:
        - ping

    ListingRequest:
      type: object
      properties:
        title:
          type: string
          example: Часы
        text:
          type: string
          example: супер товар
      required:
        - title
        - text

    ListingResponse:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          example: Часы
        text:
          type: string
          example: супер товар
      required:
        - id
        - title
        - text

    Listing:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          example: Часы
        text:
          type: string
          example: супер товар
      required:
        - id
        - title
        - text

    Category:
      type: object
      properties:
        id:
          type: string
          example: "electronics"
          description: Уникальный айди категории
        name:
          type: string
          example: "Электроника"
          description: Локализованное имя категории
        image:
          type: string
          example: "https://example.com/image.png"
          description: url картинки категории 32х32
      required:
        - id
        - name

    CategoryNode:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category'
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/CategoryNode'
      required:
        - category

    GetCategoriesResponse:
      type: object
      properties:
        categories:
          type: array
          example:
            - category:
                id: "electronics"
                name: "Электроника"
              subcategories:
                - category:
                    id: "smartphones"
                    name: "Смартфоны"
                  subcategories:
                    - category:
                        id: "iphone"
                        name: "iPhone"
                    - category:
                        id: "google_pixel"
                        name: "Google Pixel"
            - category:
                id: "clothing"
                name: "Одежда"
              subcategories:
                - category:
                    id: "mens_clothing"
                    name: "Мужская одежда"
                - category:
                    id: "womens_clothing"
                    name: "Женская одежда"
            - category:
                id: "furniture"
                name: "Мебель"
          items:
            $ref: '#/components/schemas/CategoryNode'
      required:
        - categories

    GetFiltersByCategoryResponse:
      type: object
      properties:
        filters:
          type: array
          items:
            $ref: '#/components/schemas/FilterParams'
      required:
        - filters

    FilterParams:
      type: object
      properties:
        role:
          type: string
          enum: [price, color, condition, season, brand]
          description: Роль фильтра
        params:
          oneOf:
            - $ref: '#/components/schemas/PriceFilterParams'
            - $ref: '#/components/schemas/ColorFilterParams'
            - $ref: '#/components/schemas/DropdownFilterParams'
      required:
        - role
        - params

    PriceFilterValue:
      type: object
      properties:
        min:
          type: number
          description: Минимальное значение, которое должна принимать цена. Совпадает с min из PriceFilterParams если null.
          example: 10
          nullable: true
        max:
          type: number
          description: Максимальное значение, которое должна принимать цена. Совпадает с max из PriceFilterParams если null.
          example: 123
          nullable: true
      required:
        - min
        - max

    PriceFilterParams:
      type: object
      properties:
        min:
          type: number
          description: Минимальное значение, которое может принимать цена.
          example: 0
        max:
          type: number
          description: Максимальное значение, которое может принимать цена.
          example: 200
      required:
        - min
        - max

    ColorFilterValue:
      type: array
      items:
        $ref: '#/components/schemas/Color'

    ColorFilterParams:
      type: object
      description: Пустой объект для цветового фильтра

    Color:
      type: string
      enum: [white, red, orange, yellow, olive, green, teal, blue, violet, purple, pink, brown, grey, black]

    DropdownFilterValue:
      type: array
      items:
        type: string
        description: Значение опции, уникальная строка
        example: "apple"

    DropdownFilterParams:
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/DropdownOption'
        label:
          type: string
          description: Локализованное название фильтра
          example: "Брэнд"
      required:
        - options
        - label

    DropdownOption:
      type: object
      properties:
        value:
          type: string
          description: Значение опции, уникальная строка
          example: "apple"
        label:
          type: string
          description: Локализованное название опции
          example: "Apple"
      required:
        - value

    SearchResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/SearchItem'
        cursorBefore:
          type: string
          nullable: true
          description: Курсор для предыдущей страницы, указывается в следующем запросе. Содержит информацию о элементе предшествующем текущей странице (или, что то же самое, последнем элементе предыдущей страницы).
          example: "123e4567-e89b-12d3-a456-426614174000"
        cursorAfter:
          type: string
          nullable: true
          description: Курсор для следующей страницы, указывается в следующем запросе. Содержит информацию о последнем элементе текущей страницы (или, что то же самое, эелементе, предшествующем следующей странице).
          example: "123e4567-e89b-12d3-a456-426614174000"
        qid:
          type: string
          description: ID поискового запроса, генерируется по набору categoryId, locationId, НЕЛОКАЛИЗОВАННЫЕ значения filters, sortOrder. Для одинаковых значений генерируется один и тот же ID.
          example: "123e4567-e89b-12d3-a456-426614174000"
      required:
        - items
        - cursorBefore
        - cursorAfter
        - qid

    SearchParamsResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/Category'
          description: Категория, в которой происходит поиск, если не указана, то по всем категориям
        location:
          $ref: '#/components/schemas/Location'
          description: Локация, в которой происходит поиск, если не указана, то по всем локациям
        filters:
          type: array
          description: Фильтры, которые были использованы в поиске
          items:
            $ref: '#/components/schemas/FilterValue'
        sortOrder:
          description: Сортировка, если не указано, то по релевантности
          $ref: '#/components/schemas/SortOrder'

    SearchItem:
      type: object
      properties:
        itemId:
          type: string
          description: Уникальный айди объявления
          example: "123e4567-e89b-12d3-a456-426614174000"
        title:
          type: string
          description: Локализованное название объявления
          example: "Часы Ролекс для элиточек"
        price:
          type: number
          description: Цена в валюте запроса
          example: 100500
        currency:
          $ref: '#/components/schemas/SupportedCurrency'
          description: Валюта, которая была указана в запросе
        originalPrice:
          type: number
          description: Цена в исходной валюте, которую указал автор объявления
          example: 1000
        originalCurrency:
          $ref: '#/components/schemas/SupportedCurrency'
          description: Валюта, которая была указана автором объявления
        description:
          type: string
          description: Локализованное описание объявления
          example: "Эти часы подарила мне моя бабушка, они супер, но мне не подходят, так как я хочу есть, а сколько времени знать не хочу"
        location:
          $ref: '#/components/schemas/Location'
          description: Локация объявления
        category:
          $ref: '#/components/schemas/Category'
          description: Одна из категорий объявления, но первая из тех, что подходит для запроса
        images:
          type: array
          items:
            type: string
            description: URL картинки объявления высотой не больше 200 пикселей, размерностью не выше 3к1 (идеально 1к1).
            example: "https://example.com/image.png"
      required:
        - itemId
        - title
        - price
        - currency
        - originalPrice
        - originalCurrency
        - description
        - location
        - category
        - images

    SortOrder:
      type: string
      enum: [price_asc, price_desc, newest, relevance]

    Location:
      type: object
      properties:
        id:
          type: string
          description: Уникальный айди локации
          example: "cordoba-123e456"
        name:
          type: string
          description: Локализованное название локации
          example: "Кордоба, центр"
        radius:
          type: number
          description: Радиус поиска в метрах
          example: 100
        coordinates:
          $ref: '#/components/schemas/Coordinates'
          description: Точные координаты локации
      required:
        - id
        - name
        - radius
        - coordinates

    Coordinates:
      type: object
      properties:
        x:
          type: number
          description: Широта
          example: -31.420208221317445
        y:
          type: number
          description: Долгота
          example: -64.18894746740074
      required:
        - x
        - y

    SupportedCurrency:
      type: string
      enum: [USD, RUB, ARS, EUR]
      description: Поддерживаемые валюты

    FilterValue:
      type: object
      properties:
        role:
          type: string
          enum: [price, color, condition, season, brand]
          description: Роль фильтра
        value:
          oneOf:
            - $ref: '#/components/schemas/PriceFilterValue'
            - $ref: '#/components/schemas/ColorFilterValue'
            - $ref: '#/components/schemas/DropdownFilterValue'
      required:
        - role
        - value

    ExchangeRateResponse:
      type: object
      properties:
        rate:
          type: number
          description: Коэффициент для конвертации из исходной валюты в целевую. Умножьте цену в исходной валюте на этот коэффициент, чтобы получить цену в целевой валюте.
          example: 92.5
      required:
        - rate

  responses:
    NotFound:
      description: Объект не найден
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
                example: NotFound
              description:
                type: string
                example: Объект не найден
